{
  "jobs": {
    "build": {
      "name": "Build on ${{ matrix.platform }} with GHC ${{ matrix.ghc }}",
      "runs-on": "${{ matrix.platform }}-${{ matrix.version }}",
      "steps": [
        {
          "uses": "actions/checkout@v4",
          "with": {
            "submodules": true
          }
        },
        {
          "run": "git submodule foreach git checkout main"
        },
        {
          "run": "git submodule foreach git pull"
        },
        {
          "id": "haskell",
          "uses": "haskell/actions/setup@v2",
          "with": {
            "cabal-version": "3.10.1.0",
            "ghc-version": "${{ matrix.ghc }}"
          }
        },
        {
          "run": "cabal configure --enable-tests --flags pedantic --jobs"
        },
        {
          "run": "cat cabal.project.local"
        },
        {
          "run": "cabal freeze --project-file ghc-${{ matrix.ghc }}.project"
        },
        {
          "run": "cat ghc-${{ matrix.ghc }}.project.freeze"
        },
        {
          "run": "cabal outdated --project-file ghc-${{ matrix.ghc }}.project --v2-freeze-file"
        },
        {
          "uses": "actions/cache@v3",
          "with": {
            "key": "${{ matrix.platform }}-${{ matrix.ghc }}-${{ hashFiles('ghc-*.project.freeze') }}",
            "path": "${{ steps.haskell.outputs.cabal-store }}",
            "restore-keys": "${{ matrix.platform }}-${{ matrix.ghc }}-"
          }
        },
        {
          "run": "cabal build --only-download --project-file ghc-${{ matrix.ghc }}.project all"
        },
        {
          "run": "cabal build --only-dependencies --project-file ghc-${{ matrix.ghc }}.project all"
        },
        {
          "run": "cabal build --project-file ghc-${{ matrix.ghc }}.project all"
        }
      ],
      "strategy": {
        "matrix": {
          "include": [
            {
              "ghc": "9.6.2",
              "platform": "macos",
              "version": "13"
            },
            {
              "ghc": "9.2.8",
              "platform": "ubuntu",
              "version": "22.04"
            },
            {
              "ghc": "9.4.7",
              "platform": "ubuntu",
              "version": "22.04"
            },
            {
              "ghc": "9.6.2",
              "platform": "ubuntu",
              "version": "22.04"
            },
            {
              "ghc": "9.8.1",
              "platform": "ubuntu",
              "version": "22.04"
            },
            {
              "ghc": "9.6.2",
              "platform": "windows",
              "version": "2022"
            }
          ]
        }
      }
    },
    "cabal": {
      "name": "Cabal",
      "runs-on": "ubuntu-22.04",
      "steps": [
        {
          "uses": "actions/checkout@v4",
          "with": {
            "submodules": true
          }
        },
        {
          "run": "git submodule foreach cabal check"
        }
      ]
    },
    "hlint": {
      "name": "HLint",
      "runs-on": "ubuntu-22.04",
      "steps": [
        {
          "uses": "actions/checkout@v4",
          "with": {
            "submodules": true
          }
        },
        {
          "uses": "haskell/actions/hlint-setup@v2",
          "with": {
            "version": 3.5
          }
        },
        {
          "uses": "haskell/actions/hlint-run@v2",
          "with": {
            "fail-on": "status"
          }
        }
      ]
    },
    "ormolu": {
      "name": "Ormolu",
      "runs-on": "ubuntu-22.04",
      "steps": [
        {
          "uses": "actions/checkout@v4",
          "with": {
            "submodules": true
          }
        },
        {
          "uses": "haskell-actions/run-ormolu@v14"
        }
      ]
    }
  },
  "name": "Workflow",
  "on": {
    "push": null,
    "schedule": [
      {
        "cron": "0 0 * * *"
      }
    ]
  }
}
